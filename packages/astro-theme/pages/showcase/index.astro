---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BlogPostCard from "../../components/BlogPostCard.astro";
import Shell from "../../layouts/Shell.astro";
import Footer from "../../components/Footer.astro";
import BlogDoodle from "./blog-doodle.png";
import { productFromUrl } from "../../lib/products";
import ProductNav from "../../components/nav/product/Nav.astro";
import type { CollectionEntry } from "astro:content";

const product = productFromUrl(Astro.url);

type Props = CollectionEntry<"showcase">["data"] & {
	//redundant collection
	limit?: number;
};
const props = Astro.props;

let [project1, project2, ...restProjects] = (
	await getCollection(
		"showcase",
		({ data }) =>
			!product || data?.tags?.includes(product.name))
	);
if (typeof props.limit == "number") {
	projects = projects.slice(0, props.limit);
}
---
<Shell
	title={`${product?.name ?? "demo"} showcase`}
	description="Hall of fame for community and industry projects."
>
	{product && <ProductNav {product} />}
	<header class="text-center text-stone-100 py-16">
		<div class="flex justify-center items-center">
			<Image
				src={BlogDoodle}
				width="150"
				height="129"
				class="invisible md:visible"
				alt="person reading a newspaper"
			/>
		</div>

		<h1 class="text-5xl font-semibold text-balance">
			{product?.name ?? "demos"} showcase
		</h1>
		<p class="text-lg text-balance my-8 text-stone-400">
			Hall of fame for community and industry projects.
		</p>
		<div
			class="bg-gradient-to-b from-primary-600 to-transparent opacity-20 w-full h-[40rem] absolute inset-0 -z-10"
		>
			<!-- cool background -->
		</div>
	</header>

	<section class="pb-24 px-6 mx-auto w-full max-w-screen-xl">
		<ul class="grid md:grid-cols-2 gap-8 mb-8">
			{
				[project1, project2].map((project) => (
					<li class="flex md:justify-stretch md:items-stretch">
						{project && <BlogPostCard {project} showMetadata size="wide" />}
					</li>
				))
			}
		</ul>
		<ul class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
			{
				restProjects.map((project) => (
					<li class="flex md:justify-stretch md:items-stretch">
						<BlogPostCard {project} showMetadata />
					</li>
				))
			}
		</ul>
	</section>

	<Footer />
</Shell>
