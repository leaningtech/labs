---
// Provides pagination within the current content group

import { Icon } from "astro-icon";
import { findParentDirectoryOfId, type NavEntry } from "../lib/nav";

interface Props {
	activeId: string;
}

const { activeId } = Astro.props;

async function getNextPrev(): Promise<{
	next: NavEntry | undefined;
	prev: NavEntry | undefined;
}> {
	let directory = await findParentDirectoryOfId(activeId);

	if (!directory) {
		return { next: undefined, prev: undefined };
	}

	const activeIndex = directory.entries.findIndex(({ id }) => id === activeId);
	if (activeIndex === -1) {
		console.warn(
			`ContentPagination: could not find activeId "${activeId}" in given directory`
		);
		return { next: undefined, prev: undefined };
	}

	return {
		next: findValidEntry(directory.entries, activeIndex, 1),
		prev: findValidEntry(directory.entries, activeIndex, -1),
	};
}

function findValidEntry(
	entries: NavEntry[],
	index: number,
	direction: number
): NavEntry | undefined {
	for (
		let i = index + direction;
		i >= 0 && i < entries.length;
		i += direction
	) {
		const entry = entries[i];
		if (entry && !(entry.type === "file" && entry.isIndex)) {
			return entry;
		}
	}
	return undefined;
}

const { next, prev } = await getNextPrev();

// TODO: `"href" in X` no longer needed once NavDirectorys have href (i.e. dir listing / index pages are a thing)
---

<div class="flex justify-between font-medium text-stone-400 text-base gap-8">
	{
		prev && "href" in prev ? (
			<a href={prev.href} class="flex items-center gap-2 hover:text-white p-2">
				<Icon name="jam:chevron-left" class="w-5 h-5 inline-block opacity-80" />
				{prev.title}
			</a>
		) : (
			<div />
		)
	}
	{
		next && "href" in next ? (
			<a href={next.href} class="flex items-center gap-2 hover:text-white p-2">
				{next.title}
				<Icon
					name="jam:chevron-right"
					class="w-5 h-5 inline-block opacity-80"
				/>
			</a>
		) : (
			<div />
		)
	}
</div>
